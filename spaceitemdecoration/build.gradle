apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    testImplementation 'junit:junit:4.13.1'
    testImplementation "com.google.truth:truth:1.1"
    testImplementation 'org.mockito:mockito-core:1.10.19'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

def PROPERTIES = new Properties()
PROPERTIES.load(project.rootProject.file('local.properties').newDataInputStream())

def BINTRAY_USER = PROPERTIES.getProperty('bintray.user')
def BINTRAY_KEY = PROPERTIES.getProperty('bintray.token')
def VERSION = android.defaultConfig.versionName
def GROUP_ID = 'me.farahani.spaceitemdecoration'
def REPO_NAME = 'SpaceItemDecoration'
def PACKAGE_NAME = 'me.farahani.spaceitemdecoration'
def USER_ORG = 'alireza-farahani'
def LICENSES = ['MIT']
def VCS_URL = 'https://github.com/Alireza-Farahani/EqualSpace-ItemDecorator'
def WEBSITE_URL = 'https://github.com/Alireza-Farahani/EqualSpace-ItemDecorator'
def ISSUE_TRACKER_URL = 'https://github.com/Alireza-Farahani/EqualSpace-ItemDecorator/issues'

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}
// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release
                artifact javadocJar
                artifact androidSourcesJar
                // You can then customize attributes of the publication as shown below.
                groupId = GROUP_ID
                artifactId = 'spaceitemdecoration'
                version = android.defaultConfig.versionName
            }
        }
    }
}

bintray {
    user = BINTRAY_USER
    key = BINTRAY_KEY
    publications = ['release']
    pkg {
        repo = REPO_NAME
        name = PACKAGE_NAME
        userOrg = USER_ORG
        licenses = LICENSES
        vcsUrl = VCS_URL
        websiteUrl = WEBSITE_URL
        issueTrackerUrl = ISSUE_TRACKER_URL

        version {
            name = VERSION
            vcsTag = VERSION
            released = new Date()
        }
    }
}
